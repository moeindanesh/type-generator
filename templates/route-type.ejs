<%
const { route, utils, config } = it;
const { _, pascalCase, require } = utils;
const { query, payload, pathParams, headers } = route.request;

const routeDocs = includeFile("@base/route-docs", { config, route, utils });
const routeNamespace = pascalCase(route.routeName.usage);

%>

/**
<%~ routeDocs.description %>

<%~ routeDocs.lines %>

*/
export namespace <%~ routeNamespace %> {
  export type RequestParams = <%~ (pathParams && pathParams.type) || '{}' %>;
  export type RequestQuery = <%~ (query && query.type) || '{}' %>;
  export type RequestBody = <%~ (payload && payload.type) || 'never' %>;
  export type RequestHeaders = <%~ (headers && headers.type) || '{}' %>;
  export type ResponseBody = <%~ route.response.type %>;
}

<% if (route.response.type !== 'void') { %>
export type <%~ routeNamespace %>Response = <%~ route.response.type %>;
<% } %>

<% if (route.response.errorType) { %>
export type <%~ routeNamespace %>Error = <%~ route.response.errorType %>;
<% } %>

<% if (route.request.payload) { %>
export type <%~ routeNamespace %>Request = <%~ route.request.payload.type %>;
<% } %>

<% if (query && query.type !== '{}') { %>
export type <%~ routeNamespace %>Query = <%~ query.type %>;
<% } %>

<% if (pathParams && pathParams.type !== '{}') { %>
export type <%~ routeNamespace %>Params = <%~ pathParams.type %>;
<% } %>
